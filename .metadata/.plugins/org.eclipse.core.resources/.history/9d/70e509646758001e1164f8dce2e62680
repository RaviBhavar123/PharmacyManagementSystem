package com.pharmacymanagementsystem.OrderMicroService.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.pharmacymanagementsystem.OrderMicroService.entity.Order;
import com.pharmacymanagementsystem.OrderMicroService.exception.OrderException;
import com.pharmacymanagementsystem.OrderMicroService.servive.OrderService;

@RestController
@RequestMapping("/Order")
public class OrderController {
@Autowired
private OrderService orderService;

@PostMapping("/add")
public ResponseEntity<Order>add(@RequestBody Order order) throws OrderException {
	Order order1 = orderService.addOrder(order);
	return new ResponseEntity<>(order1, HttpStatus.OK);

}
@PutMapping("/update")
public ResponseEntity<Order> update(@RequestBody Order orderRe) throws OrderException {
	Order order1 = orderService.updateOrder(orderRe, orderRe.getOrderId());
	return new ResponseEntity<>(order1, HttpStatus.OK);

}

@DeleteMapping("/delet/{orderId}")
public ResponseEntity<String> delet(@PathVariable int orderId) {
	orderService.deletOrder(orderId);
	return new ResponseEntity<>("Deleted", HttpStatus.OK);

}

@GetMapping("/get/{orderId}")
public ResponseEntity<Order> get(@PathVariable int orderId) throws OrderException {
	Order use = orderService.getOrder(orderId);
	return new ResponseEntity<>(use, HttpStatus.OK);


}
@GetMapping("/get")
public ResponseEntity<List<Order>> getAll(){
	List<Order>ref= orderService.getAllOrders();
	return new ResponseEntity<List<Order>>(ref,HttpStatus.OK);
	
}
@GetMapping("/get/{doctorId}")
public ResponseEntity<List<Order>>getByid (@PathVariable String Email){
	List<Order>ord=orderService.findByDoctorId(Email);
	return new ResponseEntity<List<Order>>(ord,HttpStatus.OK);
	
}
}
